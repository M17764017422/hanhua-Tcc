2017年9月13日10:58:32

经过对tinycc_cn/zh的实践。
和swizl的交流；https://github.com/swizl/tinycc_zh/issues/1
首先解决了我不懂的几个问题；
1，编译环境和依赖条件。
2，使用编译器的方式。

问题1；经过尝试，我发现，不管在什么平台下（win、linux或其他）要实现编译，仅仅只有gcc是不够的，编译命令需要依赖一定的软件环境，
      比如./configure、 make、 make install需要依赖gcc，git，texinfo等软件组件。win下还需要安装模拟gnu环境和bash shell的环境。
      这就是工具链，工具缺一不可。
      
问题2；变量环境也是很重要的一点，win或linux都需要设置变量路径，否则shell或终端中就不能执行程序。否则就要把程序复制到编译程序的根目录也是方法之一。
      加上问题1的描述，就组成了条件链，条件缺少一环，编译就无法进行下去。

学习使用 export PATH="$PATH: 配置gnu环境和shell的环境。并且，必须要设置工作目录，才能找到程序、命令、新创建的文件。


2017年9月19日8:36:13
经过几天的实践，已经按照swizl修改的模式和方法进行了重新修改，但是发现了几个问题，
1，不能动汇编相关代码，因为首先第一遍需要用gcc编译，而GCC既不支持汉字也不支持utf-8，因为我汉化了汇编相关代码，导致不能编译，出现超多错误。
2，现阶段通过汉化C语言来实现汉语编程还是条件太少，环境需求相当不成熟，连人们对于这方面的思想都不成熟。
3，本次汉化只能汉化一小部分关键字、保留字，一些函数比如用的多的printf scanf等都还是得打英文，占位符也没办法翻译。

因此，只能暂时放弃这方面的开发了，一是因为我生存面临困境，生活变得艰难，二是因为汉化这条路实在走不通了，我可能得改变一下思路，迂回前进，或以退为进。

综上所述，我觉得想创造中文编程，汉语编程，显然不是一个人能完成的，并且现在的条件环境相当不利。
如果真的想完成，那么，我认为可能的行得通的办法是；
1，人海战术，通过加入超多的人，用蛮力一个字符一个字符地堆砌来达到目标。
2，利用西方人创造的技术，在现有语言的基础上再创造能解析汉语中文的编程语言。
3，国家重视程序设计这方面，除了重视硬件半导体 逻辑芯片的从零创造，还要重视软件信息技术的从零创造。
4，大企业带头，不过这个可能性最小，因为资本化的关系，大企业几乎不可能会有这样的想法，小企业更不会关心这个。


2017年10月3日18:40:02
第一版汉化失败<hanhua-Tcc(汉化失败)>
现在又重新汉化了一边,已经成功.<tinycc-hhv1(汉化成功)> 可以编译通过,并且可以用汉化后的tcc编译 .c 文件源代码了.
